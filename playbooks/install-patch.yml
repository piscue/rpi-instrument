# ansible-playbook -i ~/ansible/hosts /playbooks/install-patch.yml
---

- hosts: defaultdevices
  gather_facts: yes
  #strategy: free

  vars_prompt:

  - name: patchsrc
    prompt: "Local Directory Path with PD patch (main.pd will be called)?"
    default: "../externals/pdtest"
    private: no

  vars:
    homepi: /home/pi/
    patchPH: "{{ homepi }}patch"

  tasks:

    # check readwrite /
    #- name: Switch to readwrite
    #  raspi_ro_root_enabled: no

    # Required rsync depend
    #- name: Check rsync
    #  become: yes
    #  package:
    #    name: rsync
    #    state: latest

    # Required pd depend
    #- name: PD PATCH || Check puredata-core
    #  become: yes
    #  package:
    #    name: puredata-core
    #    state: latest

    - name: PD PATCH || Disable autorun momentary
      cron:
        name: pd
        state: absent

    # copy files  TODO ask for password??
    - name: PD PATCH || Copying PD project onto rPI
      synchronize:
        src: "{{ patchsrc }}/"
        dest: "{{ patchPH }}"
        #use_ssh_args: yes

    # setting autorun on startup TODO consider add -rt

    # maybe moving to a service
    # - name: PD PATCH || Check autorun of Puredata
    #   cron:
    #     name: pd
    #     reboot: yes
    #     job: "sudo puredata -nogui {{ patchPH }}/main.pd &"
    #     state: present
    #   notify:
    #   - reboot

    # execute at boot
    - name: PD PATCH | Copy unit for execute pd-patch.py at boot
      become: yes
      copy:
        src: "../externals/pd-patch.service"
        dest: "/etc/systemd/system"
        mode: 0744

    - name: PD PATCH | enable service pd-patch and ensure it is not masked
      become: yes
      systemd:
        name: pd-patch
        enabled: yes
        masked: no
      notify:
      - reboot

    # run pd patch now
    #- block:
    #  - name: killing any PD running
    #    command: killall puredata
    #  rescue:
    #    register: nopdrunning

    # readonly pending
    #- name: Switch to readonly
    #  raspi_ro_root_enabled: yes
    #  raspi_ro_root_state_change_reboot: yes

  handlers:
    # reboot hangs the playbook
    - include: ../handlers/reboot.yml
      tags: system
